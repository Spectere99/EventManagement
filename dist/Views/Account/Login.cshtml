@using EventManagement.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-7">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                if (ViewBag.ReturnUrl != null)
                {
                    <div class="alert alert-info">
                        <h5>Logging in does NOT register you for an event.  You will be redirected to the attendee selection for registration after a successful login.</h5>
                    </div>
                }
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                //if (Model != null && !Model.EmailConfirmed) 
                if (Model != null)
                {
                    <div class="form-group">
                        @Html.ActionLink("Resend Validation Code", "ResendValidationCode", new { id=Model.UserName}, new { @class="btn btn-info"})
                    </div>     
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>
                <div class="alert alert-warning"><small>(You will still need to register for an event after successfully logging into your account!)</small></div>
                @*<p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>*@
                @* Enable this once you have account confirmation enabled for password reset functionality*@
                    
            }
        </section>
    </div>
    @*<div class="col-md-5">
        <section id="socialLoginForm">
            @Html.Partial("_Register")
        </section>
    </div>*@
    @*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}