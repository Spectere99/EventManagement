@model EventManagement.Models.PersonChildViewModel

@{
    ViewBag.Title = "Add Child/Scout";
}
<head>
    <title>Add New Child</title>
    <script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script src="~/js/person.js" type="text/javascript"></script>
</head>
<h2>Add Child/Scout</h2>

@using (Html.BeginForm())
    //"AddPerson", "Person", new { personId = Model.ParentPersonId}, FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enter your child's information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m=>m.ParentPersonId)
        <div class="row">
            <div class="col-md-4 form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(m => m.MiddleName)
                @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control", placeholder = "Middle" })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.PersonType, htmlAttributes: new { id = "lblPersonTypeList" })
                @Html.DropDownListFor(model => model.PersonType, new SelectList(Model.PersonTypeList, "PersonTypeId", "Type"), "Select ...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonType, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.UnitTypeList, htmlAttributes: new { id = "lblUnitTypeList" })
                @Html.DropDownListFor(model => model.UnitType, new SelectList(Model.UnitTypeList, "UnitTypeId", "Type"), "Select ...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.UnitList, htmlAttributes: new { id = "lblUnitList" })
                @*<select id="UnitList" name="UnitList" disabled="disabled" , class="form-control"></select>*@
                
                @Html.DropDownListFor(model => model.Unit, Enumerable.Empty<SelectListItem>(), new { disabled="true", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.UnitRankList, htmlAttributes: new { id = "lblUnitRankList" })
                @*<select id="UnitRankList" name="UnitRankList" disabled="disabled" class="form-control"></select>*@
                @Html.DropDownListFor(model => model.Rank, Enumerable.Empty<SelectListItem>(), new { disabled = "true", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })<br />
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-5">
                @Html.ActionLink("Cancel", "PersonDetails", new { id = Model.PersonId }, new { @class = "btn btn-default" })
                <input type="submit" value="Add" class="btn btn-primary"/>
            </div>
            </div>
    </div>
}

<div>
    
</div>
