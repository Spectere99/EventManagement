@using System.CodeDom
@model EventManagement.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<head>
    <title>User Creation</title>
    @*<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>*@
    <script src="~/js/register.js" type="text/javascript"></script>

</head>
<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", new { @returnURL = Session["EventStartPage"] }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr/>
    <h4>Contact Information</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First" })
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.MiddleName)
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control", placeholder = "Middle" })
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.HomePhone)
            @Html.TextBoxFor(m => m.HomePhone, new { @class = "form-control", placeholder = "(###)###-####" })
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.CellPhone)
            @Html.TextBoxFor(m => m.CellPhone, new { @class = "form-control", placeholder = "(###)###-####" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.Address1)
            @Html.TextBoxFor(m => m.Address1, new {@class = "form-control", placeholder = "Address"})
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.Address2)
            @Html.TextBoxFor(m => m.Address2, new {@class = "form-control", placeholder = "Suite / Apt."})
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.City)
            @Html.TextBoxFor(m => m.City, new { @class = "form-control", placeholder = "City" })
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.State)
            @Html.DropDownListFor(m => m.State, new SelectList(Model.StateList, "Abbreviation", "Name"), new { @class = "form-control", placeholder = "State" })
        </div>
        <div class="col-md-4 form-group">
            @Html.LabelFor(m => m.Zip)
            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control", placeholder = "Zip" })
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "name@domain.com" })
    </div>
    <hr/>
    <h4>Scouting Information</h4>
    <hr/>
    <div class="row">
        <div class="col-md-4">
            @Html.CheckBoxFor(model => model.NotUnitAffiliated, new { htmlAttribues = new { @class = "form-control" } }) Not Associated with a Unit<br />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.PersonType, htmlAttributes: new { id = "lblPersonTypeList"})
            @Html.DropDownListFor(model => model.PersonType, new SelectList(Model.PersonTypeList, "PersonTypeId", "Type"), "Select ...", new { @class = "form-control" })<br />
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.UnitTypeList, htmlAttributes: new { id="lblUnitTypeList"})
            @Html.DropDownList("UnitType", Model.UnitTypeList.Select(i => new SelectListItem { Text = i.Type.ToString(), Value = i.UnitTypeId.ToString() }), "Select ...", new { @class = "form-control", @onchange = "FillUnits()" })<br />
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.UnitList, htmlAttributes: new { id="lblUnitList"})
            @Html.DropDownList("Unit", Model.UnitList.Select(i => new SelectListItem { Text = i.UnitNumber.ToString(), Value = i.UnitId.ToString() }), "Select ...", new { @class = "form-control"})
        </div>
    </div>
    <hr/>
    <h4>Account Information</h4>
    <hr/>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" }) (Must contain at least 1 capital letter and a number)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
